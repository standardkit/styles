@use '../../mixins/flavors' as *;
@use '../../utilities/base' as *;

$component-modifiers: [color, fill, margin, padding, size, corner, border] !default;

@mixin alert($configuration: (), $modifiers: ()) {
  @include flavors-and-types(alert, $configuration, $modifiers, $component-modifiers);

  // TODO : Get padding configuration from parent and merge for the icons
  // TODO : Provide some way to get children config for icon and dismiss (flat or nested?)

  @include flavors-and-types(alert__icon, $configuration, $modifiers, [padding, position]);
  @include flavors-and-types(alert__dismiss, $configuration, $modifiers, [padding, position]);

  .alert {
    display: flex;
    align-items: center;

    .alert__content {
      flex-grow: 1;
    }

    .alert__icon {
      align-self: flex-start; // TODO : Check if this is set by default
    }

    .alert__dismiss {
      align-self: flex-start;
      cursor: pointer;
    }

    // TODO : If has icon, remove padding on the side of the icon wall (right or left)
    // TODO : Apply padding to the alert_icon component
    // TODO : Do the same for alert dismiss

    @each $size, $padding in map-get-default($modifiers, padding) {
      &.padding--#{$size} {
        $padding-x: if(is-list($padding), nth($padding, 2), $padding);
        $padding-y: if(is-list($padding), nth($padding, 1), $padding);

        .alert__icon {
          margin-left: -$padding-x * .2;
          padding-right: $padding-x * .8;
        }

        .alert__dismiss {
          margin-right: -$padding-x;
          margin-top: -$padding-y;
          margin-bottom: -$padding-y;
          padding: $padding-y $padding-x * .8;
        }
      }
    }
  }
}
