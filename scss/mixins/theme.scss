@use '../modifiers';
@use '../utilities' as *;

@mixin theme($theme: ()) {
  @include mix-theme(map-get-default($theme, modifiers), map-get-default($theme, options));
  @include mix-modifiers(map-get-default($theme, modifiers));
  @include mix-types(map-get-default($theme, types));
  @include mix-components(map-get-default($theme, components));
}

@mixin mix-types($types: ()) {
  // TODO : Implement
}

@mixin mix-components($components: ()) {
  // TODO : Implement
}

@mixin mix-modifiers($modifiers: ()) {
  // TODO : Complex Modifiers (color&fill, breakpoints)
  @include modifiers.mix-colors(get-flavors($modifiers, color), get-flavors($modifiers, fill-type));

  // TODO : Complete all modifiers
  // TODO : Make dynamic from list and optional if flavors empty
  @include modifiers.mix-borders(get-flavors($modifiers, border));
  @include modifiers.mix-corners(get-flavors($modifiers, corner));
  @include modifiers.mix-elevations(get-flavors($modifiers, elevation));
  @include modifiers.mix-fonts(get-flavors($modifiers, font));
  @include modifiers.mix-margins(get-flavors($modifiers, margin));
  @include modifiers.mix-paddings(get-flavors($modifiers, padding));
  @include modifiers.mix-sizes(get-flavors($modifiers, size));
  @include modifiers.mix-widths(get-flavors($modifiers, width));

  // TODO : Static Modifiers
  @include mix-cases(get-flavors($modifiers, case));
}

@mixin mix-theme($modifiers:(), $options:()) {
  // TODO : Check the font imports, and based on option include then
  * {
    // TODO : Make default font and get from configuration make sure it is there (text)
    @extend .font--text !optional; // TODO  Get default font, get default text color
    // Not using type-color-fill for * selector
    background-color: get-color(get-flavors($modifiers, color), primary, contrast); // TODO : use configured color, put this on a layout component
    // we can fix this with components putting class on the body
    color: get-color(get-flavors($modifiers, color), text); // TODO : use configured color / fill combination
  }
}
