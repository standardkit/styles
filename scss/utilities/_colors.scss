@function get-secondary($color) {
  $secondary: hsl(hue($color), saturation($color), 92%);
  @if lightness($color) > 60% {
    $secondary: hsl(hue($color), saturation($color), 8%);
  }
  @return $secondary;
}

@function get-contrast($color) {
  $inverted-color: invert($color);
  $contrast: hsl(hue($inverted-color), saturation($inverted-color), 95%);
  @if lightness($color) > 60% {
    $contrast: hsl(hue($inverted-color), saturation($inverted-color), 5%);
  }
  @return $contrast;
}

@function make-color-map($color) {
  @return (
    primary: $color,
    secondary: get-secondary($color),
    contrast: get-contrast($color)
  );
}

@function make-complete-color-sets($color-map, $config-key) {
  $color-config: map-get($color-map, $config-key);

  @if $color-config == null {
    @return $color-map;
  }

  @if not is-map($color-config) {
    @return map-merge($color-map, ($config-key: make-color-map($color-config)));
  }

  @each $key, $color in $color-config {
    @if not is-map($color) {
      $color-map: map-deep-merge($color-map, ($config-key: ($key: make-color-map($color))));
    }
    @if is-map($color) {
      @if not map-has-key($color, primary){
        @error 'Key "primary" not defined in map "#{$config-key}.#{$key}"';
      }
      @if not map-has-key($color, secondary){
        @error 'Key "secondary" not defined in map "#{$config-key}.#{$key}"';
      }
      @if not map-has-key($color, contrast){
        @error 'Key "contrast" not defined in map "#{$config-key}.#{$key}"';
      }
    }
  }
  @return $color-map;
}
